{"name": "test_RunThroughInvalidInputs", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Tests.test_InvalidLogin.Test_InvalidLogin object at 0x000001BD2CCFD160>\n\n    @allure.description(\"Test Run Through Invalid Inputs\")\n    @allure.step\n    def test_RunThroughInvalidInputs(self):\n        try:\n            baseUrl = \"https://opensource-demo.orangehrmlive.com\"\n            driver = WebdriverFactory().get_driver()\n            driver.get(baseUrl)\n            lp = LoginPage(driver)\n>           lp.excel_iteration()\n\nTests\\test_InvalidLogin.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.LoginPage.LoginPage object at 0x000001BD2BB3DA90>\n\n    def excel_iteration(self):\n        path = 'C:\\\\Users\\\\Dpkpc\\\\PycharmProjects\\\\DNBAssignment Pytest\\\\Driver\\\\InputTestData.xlsx'\n        int_rows = ExcelFunctions.getNumberOfRows(path, \"InputTestData\")\n        int_cols = ExcelFunctions.getNumberOfColumns(path, \"InputTestData\")\n        print(\"Number of rows in the Excel is\" + str(int_rows))\n        for iCount in range(2, int_rows + 1):\n            txt_errormessage = \"none\"\n            # All the input data are collected and stored in a variable\n            txt_username = ExcelFunctions.readData(path, \"InputTestData\", iCount, 1) or \"\"\n            txt_password = ExcelFunctions.readData(path, \"InputTestData\", iCount, 2) or \"\"\n            txt_errormessage = ExcelFunctions.readData(path, \"InputTestData\", iCount, 3) or \"\"\n            # The current browser are set with data collected from the above call\n            self.driver.find_element(By.ID, Locators.hp_txt_username_id).send_keys(txt_username)\n            self.driver.find_element(By.ID, Locators.hp_txt_password_id).send_keys(txt_password)\n            self.driver.find_element(By.ID, Locators.hp_btn_Login_id).click()\n            element = self.driver.find_element(By.ID, Locators.hp_lbl_ErrorMessage_id)\n            print(str(int_cols) + \" \" + str(iCount) + \" \" + element.text + \" \" + txt_username + \" \" + txt_password)\n            # Verification of the Error message with the expected error message in Excel\n>           assert element.text == txt_errormessage\nE           AssertionError\n\nPages\\LoginPage.py:58: AssertionError"}, "description": "Test Run Through Invalid Inputs", "steps": [{"name": "test_RunThroughInvalidInputs", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\users\\dpkpc\\pycharmprojects\\dnbassignment\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Dpkpc\\PycharmProjects\\DNBAssignment Pytest\\Tests\\test_InvalidLogin.py\", line 29, in test_RunThroughInvalidInputs\n    lp.excel_iteration()\n  File \"C:\\Users\\Dpkpc\\PycharmProjects\\DNBAssignment Pytest\\Pages\\LoginPage.py\", line 58, in excel_iteration\n    assert element.text == txt_errormessage\n"}, "attachments": [{"name": "Screenshot of Error", "source": "b36dfe78-c5d6-464b-9aec-cacefb41f5ab-attachment.png", "type": "image/png"}, {"name": "Error Trace", "source": "bc0bfe40-5de5-4d88-9d04-e6019ba3f3f5-attachment.txt", "type": "text/plain"}], "start": 1622976485579, "stop": 1622976495401}], "attachments": [{"name": "stdout", "source": "150ca860-228d-4592-a188-d2b65f15fe46-attachment.txt", "type": "text/plain"}], "start": 1622976485578, "stop": 1622976495403, "uuid": "35993175-55a2-4487-8ebc-bad06f9758b0", "historyId": "009d1011368ce3f9da70162cce4254b7", "testCaseId": "2bef674a9cac19ff605e3e0006274f6e", "fullName": "Tests.test_InvalidLogin.Test_InvalidLogin#test_RunThroughInvalidInputs", "labels": [{"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_InvalidLogin"}, {"name": "subSuite", "value": "Test_InvalidLogin"}, {"name": "host", "value": "DESKTOP-3H0QEFI"}, {"name": "thread", "value": "22280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_InvalidLogin"}]}